# Would like clang-diagnostic, but we need compile_commands.json?

Checks: >
    clang-analyzer-*,
    modernize-*,
    performance-*,
    readability-*,
    bugprone-*,
    cppcoreguidelines-*,
    -clang-diagnostic-*,
    -readability-identifier-length,
    -readability-braces-around-statements,
    -cppcoreguidelines-pro-type-union-access,
    -readability-implicit-bool-conversion,
    -readability-magic-numbers,
    -modernize-use-trailing-return-type,
    -readability-isolate-declaration,
    -cppcoreguidelines-avoid-magic-numbers,
    -bugprone-easily-swappable-parameters,
    -modernize-use-nodiscard,
    -bugprone-reserved-identifier,
    -cppcoreguidelines-special-member-functions,
    -readability-function-cognitive-complexity,
    -readability-named-parameter,
    -readability-uppercase-literal-suffix,
    -cppcoreguidelines-macro-usage,
    -cppcoreguidelines-avoid-const-or-ref-data-members,
    -cppcoreguidelines-non-private-member-variables-in-classes,
    -readability-avoid-unconditional-preprocessor-if,
    -readability-inconsistent-declaration-parameter-name,
    -readability-simplify-boolean-expr

CheckOptions:
  - key:   bugprone-reserved-identifier.AllowedIdentifiers
    value: '_Count;_End'
  - key:   bugprone-signed-char-misuse.CharTypdefsToIgnore
    value: 'int8_t'
  - key:   cppcoreguidelines-pro-type-member-init.UseAssignment
    value: true

HeaderFilterRegex: ''
